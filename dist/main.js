let e=0;const t=e++,s=e++,r=e++,n=e++,{ArrayBuffer:a,Atomics:o,Promise:c}=globalThis,{isArray:i}=Array,{create:p,getPrototypeOf:l,values:f}=Object,u=l(Int32Array),d=p(o),g=()=>c.withResolvers(),w=new Map,h=(t,s)=>class extends t{constructor(t,...r){super(t,...r),t instanceof s&&w.set(this,[e++,0,g()])}},y=new WeakSet,v=e=>(y.add(e),e),M=(e,s)=>{const{data:r}=e,n=i(r)&&(r.at(0)===s||r.at(1)===t&&!s);return n&&(e.stopImmediatePropagation(),e.preventDefault()),n},m=e=>null!==e&&"object"==typeof e&&!y.has(e),A=new WeakMap,E=(e,t,s)=>{if(w.has(e))t.set(e,w.get(e)[0]);else if(!(e instanceof u||e instanceof a))for(const r of f(e))m(r)&&!s.has(r)&&(s.add(r),E(r,t,s))},k=(...e)=>({value:new c((t=>{let s=new Worker("data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))");s.onmessage=()=>t("ok"),s.postMessage(e)}))}),b=(e,t,s)=>{for(const[s,r]of t)A.set(s,[r,e.currentTarget]);(({currentTarget:e,type:t,origin:s,lastEventId:r,source:n,ports:a},o)=>{e.dispatchEvent(new MessageEvent(t,{data:o,origin:s,lastEventId:r,source:n,ports:a}))})(e,s)};let{BigInt64Array:x,Int32Array:I,SharedArrayBuffer:T,Worker:W}=globalThis,U=e=>e;const S=e=>({...e,type:"module"});try{new T(4),W=class extends W{constructor(e,t){super(e,S(t))}},d.waitAsync||(d.waitAsync=k)}catch(e){const o=crypto.randomUUID(),c=new Map,i=new Map,p=(e,t,s,...r)=>{e.addEventListener(t,s,...r)},l=({serviceWorker:e},t,s)=>{let r;p(e,"message",(e=>{if(M(e,o)){const[t,s,n]=e.data,a=[s,n].join(","),c=e=>{i.delete(a),r.postMessage([o,s,n,e])},p=i.get(a);if(p)c(p);else{const{promise:e,resolve:t}=g();i.set(a,t),e.then(c)}}})),e.register(t).then((function e(t){r=t.installing||t.waiting||t.active,"activated"===r.state?s():p(r,"statechange",(()=>e(t)),{once:!0})}))};U=v,d.notify=(e,t)=>{const[r,n]=(e=>A.get(e))(e),a=[r,t].join(","),c=i.get(a);return c?c(e):i.set(a,e),n.postMessage([o,s,e,r,t]),0},d.waitAsync=(e,...t)=>{const[s,r]=((e,t)=>{const s=w.get(e),[r,n,{promise:a}]=s;return s[1]=t,[r,a]})(e,...t);return{value:r}},T=class extends a{},x=h(x,T),I=h(I,T),W=class extends W{constructor(e,a){let i=a?.serviceWorker||"";if(i){if(i=new URL(i,location.href).href,a={...a,serviceWorker:i},!c.has(i)){const{promise:e,resolve:t}=g();l(navigator,i,t),c.set(i,e)}c.get(i).then((()=>super.postMessage([o,n])))}super(e,S(a)),super.postMessage([o,t,a]),p(this,"message",(e=>{if(M(e,o)){const[t,n,...a]=e.data;switch(n){case s:((e,t,s)=>{for(const[r,[n,a,{resolve:o}]]of w)if(t===n&&s===a){for(let t=0;t<e.length;t++)r[t]=e[t];w.delete(r),o("ok");break}})(...a);break;case r:b(e,...a)}}}))}postMessage(e,...t){return super.postMessage(((e,t)=>{const s=new Map;return m(t)&&E(t,s,new Set),s.size?[e,r,s,t]:t})(o,e),...t)}}}const{BYTES_PER_ELEMENT:j}=Int32Array,{BYTES_PER_ELEMENT:D}=Uint16Array,{notify:P}=d,{entries:B}=Object,L=new TextDecoder("utf-16"),O=new WeakSet,R=(...e)=>(O.add(e),e),_=new Map;let N=0;const Y=([e,t,n,a,o,c,i,p],l)=>(...f)=>{const u=N++,d=[];O.has(f.at(-1)||d)&&O.delete(d=f.pop());const g=o(i?f.map(i):f);let w=new t(new n(2*j));return a([e,r,u,w,l,g],{transfer:d}),p(w,0).value.then((()=>{const r=w[1];if(!r)return;const o=D*r;return w=new t(new n(o+o%j)),a([e,s,u,w]),p(w,0).value.then((()=>c(L.decode(new Uint16Array(w.buffer).slice(0,r)))))}))},z=(e,t)=>{const s=new Map;for(const[r,n]of B(t))s.set(r,e.push(n)-1);return s};var C=({parse:e,stringify:n,transform:a}=JSON)=>{const o=((e,t)=>async(s,r,n,a)=>{try{const o=await s(...a);if(void 0!==o){const s=e(t?t(o):o);_.set(r,s),n[1]=s.length}}finally{n[0]=1,P(n,0)}})(n,a),c=crypto.randomUUID();return{Worker:class extends W{constructor(n,i){const p=g(),l=[];super(n,i={...i,exports:z(l,i?.exports||{})}),this.proxy=new Proxy(p.promise,{get:(e,t)=>async(...s)=>(await e)[t](...s)}),this.postMessage(U([c,t,i])),this.addEventListener("message",(n=>{if(M(n,c)){const[i,f,...u]=n.data;switch(f){case t:p.resolve(((e,t)=>{const s={};for(const[r,n]of t)s[r]=Y(e,n);return s})([c,I,T,this.postMessage.bind(this),U,e,a,d.waitAsync],...u));break;case r:{const[e,t,s,r]=u;o(l[s],e,t,r);break}case s:((e,t)=>{const s=_.get(e);_.delete(e);for(let e=new Uint16Array(t.buffer),r=0,{length:n}=s;r<n;r++)e[r]=s.charCodeAt(r);P(t,0)})(...u)}}}))}},transfer:R}};export{C as default};
